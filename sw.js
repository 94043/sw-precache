(function () {
'use strict';

// This uses the ES2015 module format: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import
var manifest = [{"url":"/css/main.css","revision":"3cb4f06fd9e705bea97eb1bece31fd6d"},{"url":"/images/one.png","revision":"c5a951f965e6810d7b65615ee0d15053"},{"url":"/images/runtime-caching/four.png","revision":"29d2cd301ed1e5497e12cafee35a0188"},{"url":"/images/runtime-caching/three.png","revision":"c5a951f965e6810d7b65615ee0d15053"},{"url":"/images/two.png","revision":"29d2cd301ed1e5497e12cafee35a0188"},{"url":"/js/a.js","revision":"18ecf599c02b50bf02b849d823ce81f0"},{"url":"/js/b.js","revision":"c7a9d7171499d530709140778f1241cb"},{"url":"/js/service-worker-registration.js","revision":"472ef41a6f08abe6e4678362e24949ba"},{"url":"/index.html","revision":"d378b5b669cd3e69fcf8397eba85b67d"}];

/*
 Copyright 2016 Google Inc. All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
class ErrorFactory$1{constructor(e){this._errors=e;}createError(e,t){if(!(e in this._errors))throw new Error(`Unable to generate error '${e}'.`);let r=this._errors[e].replace(/\s+/g,' '),a=null;t&&(r+=` [${t.message}]`,a=t.stack);const n=new Error;return n.name=e,n.message=r,n.stack=a,n}}const errors={'not-in-sw':'sw-lib must be loaded in your service worker file.','unsupported-route-type':'Routes must be either a express style route string, a Regex to capture request URLs or a Route instance.','empty-express-string':'The Express style route string must have some characters, an empty string is invalid.','bad-revisioned-cache-list':`The 'cacheRevisionedAssets()' method expects`+`an array of revisioned urls like so: ['/example/hello.1234.txt', `+`{path: 'hello.txt', revision: '1234'}]`};var ErrorFactory=new ErrorFactory$1(errors);const errors$1={'express-route-requires-absolute-path':`When using ExpressRoute, you must
    provide a path that starts with a '/' character. You can only match
    same-origin requests. For more flexibility, use RegExpRoute.`};var ErrorFactory$3=new ErrorFactory$1(errors$1);function atLeastOne(e){const t=Object.keys(e);if(!t.some(r=>e[r]!==void 0))throw Error('Please set at least one of the following parameters: '+t.map(r=>`'${r}'`).join(', '))}function hasMethod(e,t){const r=Object.keys(e).pop(),a=typeof e[r][t];if('function'!=a)throw Error(`The '${r}' parameter must be an object that exposes `+`a '${t}' method.`)}function isInstance(e,t){const r=Object.keys(e).pop();if(!(e[r]instanceof t))throw Error(`The '${r}' parameter must be an instance of `+`'${t.name}'`)}function isOneOf(e,t){const r=Object.keys(e).pop();if(!t.includes(e[r]))throw Error(`The '${r}' parameter must be set to one of the `+`following: ${t}`)}function isType(e,t){const r=Object.keys(e).pop(),a=typeof e[r];if(a!==t)throw Error(`The '${r}' parameter has the wrong type. `+`(Expected: ${t}, actual: ${a})`)}function isSWEnv(){return'ServiceWorkerGlobalScope'in self&&self instanceof ServiceWorkerGlobalScope}function isValue(e,t){const r=Object.keys(e).pop(),a=e[r];if(a!==t)throw Error(`The '${r}' parameter has the wrong value. `+`(Expected: ${t}, actual: ${a})`)}var assert={atLeastOne,hasMethod,isInstance,isOneOf,isType,isSWEnv,isValue};const defaultMethod='GET'; const validMethods=['DELETE','GET','HEAD','POST','PUT'];class Route{constructor({match:e,handler:t,method:r}={}){assert.isType({match:e},'function'),assert.hasMethod({handler:t},'handle'),this.match=e,this.handler=t,r?(assert.isOneOf({method:r},validMethods),this.method=r):this.method=defaultMethod;}}var index$1=Array.isArray||function(e){return'[object Array]'==Object.prototype.toString.call(e)}; var isarray=index$1; var index=pathToRegexp; var parse_1=parse; var compile_1=compile; var tokensToFunction_1=tokensToFunction; var tokensToRegExp_1=tokensToRegExp; var PATH_REGEXP=new RegExp(['(\\\\.)','([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'),'g');function parse(e,t){for(var d,r=[],a=0,n=0,s='',o=t&&t.delimiter||'/';null!=(d=PATH_REGEXP.exec(e));){var l=d[0],u=d[1],h=d.index;if(s+=e.slice(n,h),n=h+l.length,u){s+=u[1];continue}var g=e[n],f=d[2],y=d[3],_=d[4],b=d[5],v=d[6],E=d[7];s&&(r.push(s),s='');var N=d[2]||o,C=_||b;r.push({name:y||a++,prefix:f||'',delimiter:N,optional:'?'===v||'*'===v,repeat:'+'===v||'*'===v,partial:null!=f&&null!=g&&g!==f,asterisk:!!E,pattern:C?escapeGroup(C):E?'.*':'[^'+escapeString(N)+']+?'});}return n<e.length&&(s+=e.substr(n)),s&&r.push(s),r}function compile(e,t){return tokensToFunction(parse(e,t))}function encodeURIComponentPretty(e){return encodeURI(e).replace(/[\/?#]/g,function(t){return'%'+t.charCodeAt(0).toString(16).toUpperCase()})}function encodeAsterisk(e){return encodeURI(e).replace(/[?#]/g,function(t){return'%'+t.charCodeAt(0).toString(16).toUpperCase()})}function tokensToFunction(e){var t=Array(e.length);for(var r=0;r<e.length;r++)'object'==typeof e[r]&&(t[r]=new RegExp('^(?:'+e[r].pattern+')$'));return function(a,n){var s='',o=a||{},d=(n||{}).pretty?encodeURIComponentPretty:encodeURIComponent;for(var l=0;l<e.length;l++){var u=e[l];if('string'==typeof u){s+=u;continue}var g,h=o[u.name];if(null==h)if(u.optional){u.partial&&(s+=u.prefix);continue}else throw new TypeError('Expected "'+u.name+'" to be defined');if(isarray(h)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(h)+'`');if(0===h.length)if(u.optional)continue;else throw new TypeError('Expected "'+u.name+'" to not be empty');for(var f=0;f<h.length;f++){if(g=d(h[f]),!t[l].test(g))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(g)+'`');s+=(0===f?u.prefix:u.delimiter)+g;}continue}if(g=u.asterisk?encodeAsterisk(h):d(h),!t[l].test(g))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+g+'"');s+=u.prefix+g;}return s}}function escapeString(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,'\\$1')}function escapeGroup(e){return e.replace(/([=!:$\/()])/g,'\\$1')}function attachKeys(e,t){return e.keys=t,e}function flags(e){return e.sensitive?'':'i'}function regexpToRegexp(e,t){var r=e.source.match(/\((?!\?)/g);if(r)for(var a=0;a<r.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return attachKeys(e,t)}function arrayToRegexp(e,t,r){var a=[];for(var n=0;n<e.length;n++)a.push(pathToRegexp(e[n],t,r).source);var s=new RegExp('(?:'+a.join('|')+')',flags(r));return attachKeys(s,t)}function stringToRegexp(e,t,r){return tokensToRegExp(parse(e,r),t,r)}function tokensToRegExp(e,t,r){isarray(t)||(r=t||r,t=[]),r=r||{};var a=r.strict,n=!1!==r.end,s='';for(var o=0;o<e.length;o++){var d=e[o];if('string'==typeof d)s+=escapeString(d);else{var l=escapeString(d.prefix),u='(?:'+d.pattern+')';t.push(d),d.repeat&&(u+='(?:'+l+u+')*'),u=d.optional?d.partial?l+'('+u+')?':'(?:'+l+'('+u+'))?':l+'('+u+')',s+=u;}}var h=escapeString(r.delimiter||'/'),g=s.slice(-h.length)===h;return a||(s=(g?s.slice(0,-h.length):s)+'(?:'+h+'(?=$))?'),s+=n?'$':a&&g?'':'(?='+h+'|$)',attachKeys(new RegExp('^'+s,flags(r)),t)}function pathToRegexp(e,t,r){return isarray(t)||(r=t||r,t=[]),r=r||{},e instanceof RegExp?regexpToRegexp(e,t):isarray(e)?arrayToRegexp(e,t,r):stringToRegexp(e,t,r)}index.parse=parse_1,index.compile=compile_1,index.tokensToFunction=tokensToFunction_1,index.tokensToRegExp=tokensToRegExp_1;class ExpressRoute extends Route{constructor({path:e,handler:t,method:r}){if('/'!==e.substring(0,1))throw ErrorFactory$3.createError('express-route-requires-absolute-path');let a=[];const n=index(e,a);super({match:({url:s})=>{if(s.origin!==location.origin)return null;const o=s.pathname.match(n);if(!o)return null;const d={};return a.forEach((l,u)=>{d[l.name]=o[u+1];}),d},handler:t,method:r});}}class RegExpRoute extends Route{constructor({regExp:e,handler:t,method:r}){assert.isInstance({regExp:e},RegExp),super({match:({url:a})=>{const n=a.href.match(e);return n?n.slice(1):null},handler:t,method:r});}}class Router$2{setDefaultHandler({handler:e}={}){assert.hasMethod({handler:e},'handle'),this.defaultHandler=e;}setCatchHandler({handler:e}={}){assert.hasMethod({handler:e},'handle'),this.catchHandler=e;}registerRoutes({routes:e}={}){assert.isInstance({routes:e},Array),self.addEventListener('fetch',t=>{const r=new URL(t.request.url);if(r.protocol.startsWith('http')){let a;for(let n of e||[])if(n.method===t.request.method){const s=n.match({url:r,event:t});if(s){let o=s;Array.isArray(o)&&0===o.length?o=void 0:o.constructor===Object&&0===Object.keys(o).length&&(o=void 0),a=n.handler.handle({url:r,event:t,params:o});break}}!a&&this.defaultHandler&&(a=this.defaultHandler.handle({url:r,event:t})),a&&this.catchHandler&&(a=a.catch(n=>{return this.catchHandler.handle({url:r,event:t,error:n})})),a&&t.respondWith(a);}});}registerRoute({route:e}={}){assert.isInstance({route:e},Route),this.registerRoutes({routes:[e]});}}class Router$$1{constructor(){this._router=new Router$2;}registerRoute(e,t){if('function'==typeof t&&(t={handle:t}),'string'==typeof e){if(0===e.length)throw ErrorFactory.createError('empty-express-string');this._router.registerRoute({route:new ExpressRoute({path:e,handler:t})});}else if(e instanceof RegExp)this._router.registerRoute({route:new RegExpRoute({regExp:e,handler:t})});else if(e instanceof Route)this._router.registerRoute({route:e});else throw ErrorFactory.createError('unsupported-route-type')}}const errors$2={'not-in-sw':'sw-precaching must be loaded in your service worker file.','invalid-revisioned-entry':`File manifest entries must be either a `+`string with revision info in the url or an object with a 'url' and `+`'revision' parameters.`,'invalid-unrevisioned-entry':``,'bad-cache-bust':`The cache bust parameter must be a boolean.`,'duplicate-entry-diff-revisions':`An attempt was made to cache the same `+`url twice with each having different revisions. This is not supported.`,'request-not-cached':`A request failed the criteria to be cached. By `+`default, only responses with 'response.ok = true' are cached.`,'should-override':'Method should be overridden by the extending class.'};var ErrorFactory$4=new ErrorFactory$1(errors$2);let cacheName=`sw-runtime-caching`;self&&self.registration&&(cacheName+=`-${self.registration.scope}`);const defaultCacheName=cacheName; const pluginCallbacks=['cacheDidUpdate','cacheWillMatch','cacheWillUpdate','fetchDidFail','requestWillFetch']; const errors$3={'multiple-cache-will-update-plugins':'You cannot register more than one plugin that implements cacheWillUpdate.','multiple-cache-will-match-plugins':'You cannot register more than one plugin that implements cacheWillMatch.','invalid-reponse-for-caching':'The fetched response could not be cached due to an invalid response code, by default only 20X responses can be cached.'};var ErrorFactory$5=new ErrorFactory$1(errors$3); var asyncToGenerator=function(e){return function(){var t=e.apply(this,arguments);return new Promise(function(r,a){function n(s,o){try{var d=t[s](o),l=d.value;}catch(u){return void a(u)}return d.done?void r(l):Promise.resolve(l).then(function(u){n('next',u);},function(u){n('throw',u);})}return n('next')})}};class RequestWrapper{constructor({cacheName:e,plugins:t,fetchOptions:r,matchOptions:a}={}){if(e?(assert.isType({cacheName:e},'string'),this.cacheName=e):this.cacheName=defaultCacheName,r&&(assert.isType({fetchOptions:r},'object'),this.fetchOptions=r),a&&(assert.isType({matchOptions:a},'object'),this.matchOptions=a),this.pluginCallbacks={},t&&(assert.isInstance({plugins:t},Array),t.forEach(n=>{for(let s of pluginCallbacks)'function'==typeof n[s]&&(this.pluginCallbacks[s]||(this.pluginCallbacks[s]=[]),this.pluginCallbacks[s].push(n[s].bind(n)));})),this.pluginCallbacks.cacheWillUpdate&&1!==this.pluginCallbacks.cacheWillUpdate.length)throw ErrorFactory$5.createError('multiple-cache-will-update-plugins');if(this.pluginCallbacks.cacheWillMatch&&1!==this.pluginCallbacks.cacheWillMatch.length)throw ErrorFactory$5.createError('multiple-cache-will-match-plugins')}getCache(){var e=this;return asyncToGenerator(function*(){return e._cache||(e._cache=yield caches.open(e.cacheName)),e._cache})()}match({request:e}){var t=this;return asyncToGenerator(function*(){assert.atLeastOne({request:e});const r=yield t.getCache();let a=yield r.match(e,t.matchOptions);return t.pluginCallbacks.cacheWillMatch&&(a=t.pluginCallbacks.cacheWillMatch[0]({cachedResponse:a})),a})()}fetch({request:e}){var t=this;return asyncToGenerator(function*(){if(assert.atLeastOne({request:e}),t.pluginCallbacks.requestWillFetch)for(let r of t.pluginCallbacks.requestWillFetch){const a=r({request:e});assert.isInstance({returnedPromise:a},Promise);const n=yield a;assert.isInstance({returnedRequest:n},Request),e=n;}try{return yield fetch(e,t.fetchOptions)}catch(r){if(t.pluginCallbacks.fetchDidFail)for(let a of t.pluginCallbacks.fetchDidFail)a({request:e});throw r}})()}fetchAndCache({request:e,waitOnCache:t,cacheKey:r}){var a=this;return asyncToGenerator(function*(){assert.atLeastOne({request:e});let n;const s=yield a.fetch({request:e});let o=s.ok;if(a.pluginCallbacks.cacheWillUpdate&&(o=a.pluginCallbacks.cacheWillUpdate[0]({request:e,response:s})),o){const d=s.clone();n=a.getCache().then((()=>{var l=asyncToGenerator(function*(u){let h;'opaque'!==s.type&&a.pluginCallbacks.cacheDidUpdate&&(h=yield a.match({request:e})),yield u.put(r||e,d);for(let g of a.pluginCallbacks.cacheDidUpdate||[])g({cacheName:a.cacheName,oldResponse:h,newResponse:d});});return function(u){return l.apply(this,arguments)}})());}else if(!o&&t)throw ErrorFactory$5.createError('invalid-reponse-for-caching');return t&&n&&(yield n),s})()}}class Handler{constructor({requestWrapper:e}={}){this.requestWrapper=e?e:new RequestWrapper;}handle({event:e,params:t}={}){throw Error('This abstract method must be implemented in a subclass.')}}class CacheFirst extends Handler{handle({event:e}={}){var t=this;return asyncToGenerator(function*(){assert.isInstance({event:e},FetchEvent);const r=yield t.requestWrapper.match({request:e.request});return r||(yield t.requestWrapper.fetchAndCache({request:e.request}))})()}}class CacheOnly extends Handler{handle({event:e}={}){var t=this;return asyncToGenerator(function*(){return assert.isInstance({event:e},FetchEvent),yield t.requestWrapper.match({request:e.request})})()}}class NetworkFirst extends Handler{handle({event:e}={}){var t=this;return asyncToGenerator(function*(){assert.isInstance({event:e},FetchEvent);let r;try{if(r=yield t.requestWrapper.fetchAndCache({request:e.request}),r)return r}catch(a){}return yield t.requestWrapper.match({request:e.request})})()}}class NetworkOnly extends Handler{handle({event:e}={}){var t=this;return asyncToGenerator(function*(){return assert.isInstance({event:e},FetchEvent),yield t.requestWrapper.fetch({request:e.request})})()}}class StaleWhileRevalidate extends Handler{handle({event:e}={}){var t=this;return asyncToGenerator(function*(){assert.isInstance({event:e},FetchEvent);const r=t.requestWrapper.fetchAndCache({request:e.request}).catch(function(){return Response.error()}),a=yield t.requestWrapper.match({request:e.request});return a||(yield r)})()}}class BaseCacheManager{constructor(e){this._entriesToCache=new Map,this._requestWrapper=new RequestWrapper({cacheName:e,fetchOptions:{credentials:'same-origin'}}),this._cacheName=this._requestWrapper.cacheName;}_addEntries(e){this._parsedCacheUrls=null,e.forEach(t=>{this._addEntryToInstallList(this._parseEntry(t));});}getCacheName(){return this._cacheName}getCachedUrls(){return this._parsedCacheUrls||(this._parsedCacheUrls=Array.from(this._entriesToCache.keys()).map(e=>new URL(e,location).href)),this._parsedCacheUrls}_addEntryToInstallList(e){const t=e.entryID,r=this._entriesToCache.get(e.entryID);return r?void this._onDuplicateInstallEntryFound(e,r):void this._entriesToCache.set(t,e)}install(){var e=this;return asyncToGenerator(function*(){if(0!==e._entriesToCache.size){const t=[];return e._entriesToCache.forEach(function(r){t.push(e._cacheEntry(r));}),Promise.all(t)}})()}_cacheEntry(e){var t=this;return asyncToGenerator(function*(){const r=yield t._isAlreadyCached(e);if(!r)try{return yield t._requestWrapper.fetchAndCache({request:e.getNetworkRequest(),waitOnCache:!0,cacheKey:e.request}),t._onEntryCached(e)}catch(a){throw ErrorFactory$4.createError('request-not-cached',{message:`Failed to get a cacheable response for `+`'${e.request.url}': ${a.message}`})}})()}cleanup(){var e=this;return asyncToGenerator(function*(){if(yield caches.has(e._cacheName)){const t=[];e._entriesToCache.forEach(function(s){t.push(s.request.url);});const r=yield e._getCache(),a=yield r.keys(),n=a.filter(function(s){return!t.includes(s.url)});return Promise.all(n.map(function(s){return r.delete(s)}))}})()}_getCache(){var e=this;return asyncToGenerator(function*(){return e._cache||(e._cache=yield caches.open(e._cacheName)),e._cache})()}_parseEntry(e){throw ErrorFactory$4.createError('should-override')}_onDuplicateEntryFound(e,t){throw ErrorFactory$4.createError('should-override')}_isAlreadyCached(e){throw ErrorFactory$4.createError('should-override')}_onEntryCached(e){throw ErrorFactory$4.createError('should-override')}}function createCommonjsModule(e,t){return t={exports:{}},e(t,t.exports),t.exports}var idb=createCommonjsModule(function(e){'use strict';(function(){function t(v){return Array.prototype.slice.call(v)}function r(v){return new Promise(function(E,N){v.onsuccess=function(){E(v.result);},v.onerror=function(){N(v.error);};})}function a(v,E,N){var C,q=new Promise(function(x,k){C=v[E].apply(v,N),r(C).then(x,k);});return q.request=C,q}function n(v,E,N){var C=a(v,E,N);return C.then(function(q){if(q)return new h(q,C.request)})}function s(v,E,N){N.forEach(function(C){Object.defineProperty(v.prototype,C,{get:function(){return this[E][C]},set:function(q){this[E][C]=q;}});});}function o(v,E,N,C){C.forEach(function(q){q in N.prototype&&(v.prototype[q]=function(){return a(this[E],q,arguments)});});}function d(v,E,N,C){C.forEach(function(q){q in N.prototype&&(v.prototype[q]=function(){return this[E][q].apply(this[E],arguments)});});}function l(v,E,N,C){C.forEach(function(q){q in N.prototype&&(v.prototype[q]=function(){return n(this[E],q,arguments)});});}function u(v){this._index=v;}function h(v,E){this._cursor=v,this._request=E;}function g(v){this._store=v;}function f(v){this._tx=v,this.complete=new Promise(function(E,N){v.oncomplete=function(){E();},v.onerror=function(){N(v.error);},v.onabort=function(){N(v.error);};});}function y(v,E,N){this._db=v,this.oldVersion=E,this.transaction=new f(N);}function _(v){this._db=v;}s(u,'_index',['name','keyPath','multiEntry','unique']),o(u,'_index',IDBIndex,['get','getKey','getAll','getAllKeys','count']),l(u,'_index',IDBIndex,['openCursor','openKeyCursor']),s(h,'_cursor',['direction','key','primaryKey','value']),o(h,'_cursor',IDBCursor,['update','delete']),['advance','continue','continuePrimaryKey'].forEach(function(v){v in IDBCursor.prototype&&(h.prototype[v]=function(){var E=this,N=arguments;return Promise.resolve().then(function(){return E._cursor[v].apply(E._cursor,N),r(E._request).then(function(C){if(C)return new h(C,E._request)})})});}),g.prototype.createIndex=function(){return new u(this._store.createIndex.apply(this._store,arguments))},g.prototype.index=function(){return new u(this._store.index.apply(this._store,arguments))},s(g,'_store',['name','keyPath','indexNames','autoIncrement']),o(g,'_store',IDBObjectStore,['put','add','delete','clear','get','getAll','getKey','getAllKeys','count']),l(g,'_store',IDBObjectStore,['openCursor','openKeyCursor']),d(g,'_store',IDBObjectStore,['deleteIndex']),f.prototype.objectStore=function(){return new g(this._tx.objectStore.apply(this._tx,arguments))},s(f,'_tx',['objectStoreNames','mode']),d(f,'_tx',IDBTransaction,['abort']),y.prototype.createObjectStore=function(){return new g(this._db.createObjectStore.apply(this._db,arguments))},s(y,'_db',['name','version','objectStoreNames']),d(y,'_db',IDBDatabase,['deleteObjectStore','close']),_.prototype.transaction=function(){return new f(this._db.transaction.apply(this._db,arguments))},s(_,'_db',['name','version','objectStoreNames']),d(_,'_db',IDBDatabase,['close']),['openCursor','openKeyCursor'].forEach(function(v){[g,u].forEach(function(E){E.prototype[v.replace('open','iterate')]=function(){var N=t(arguments),C=N[N.length-1],q=this._store||this._index,x=q[v].apply(q,N.slice(0,-1));x.onsuccess=function(){C(x.result);};};});}),[u,g].forEach(function(v){v.prototype.getAll||(v.prototype.getAll=function(E,N){var C=this,q=[];return new Promise(function(x){C.iterateCursor(E,function(k){return k?(q.push(k.value),void 0!==N&&q.length==N?void x(q):void k.continue()):void x(q)});})});});var b={open:function(v,E,N){var C=a(indexedDB,'open',[v,E]),q=C.request;return q.onupgradeneeded=function(x){N&&N(new y(q.result,x.oldVersion,q.transaction));},C.then(function(x){return new _(x)})},delete:function(v){return a(indexedDB,'deleteDatabase',[v])}};e.exports=b;})();});class IDBHelper{constructor(e,t,r){if(e==void 0||t==void 0||r==void 0)throw Error('name, version, storeName must be passed to the constructor.');this._name=e,this._version=t,this._storeName=r;}_getDb(){return this._dbPromise?this._dbPromise:(this._dbPromise=idb.open(this._name,this._version,e=>{e.createObjectStore(this._storeName);}).then(e=>{return e}),this._dbPromise)}close(){return this._dbPromise?this._dbPromise.then(e=>{e.close(),this._dbPromise=null;}):void 0}put(e,t){return this._getDb().then(r=>{const a=r.transaction(this._storeName,'readwrite'),n=a.objectStore(this._storeName);return n.put(t,e),a.complete})}delete(e){return this._getDb().then(t=>{const r=t.transaction(this._storeName,'readwrite'),a=r.objectStore(this._storeName);return a.delete(e),r.complete})}get(e){return this._getDb().then(t=>{return t.transaction(this._storeName).objectStore(this._storeName).get(e)})}getAllValues(){return this._getDb().then(e=>{return e.transaction(this._storeName).objectStore(this._storeName).getAll()})}getAllKeys(){return this._getDb().then(e=>{return e.transaction(this._storeName).objectStore(this._storeName).getAllKeys()})}}const cacheBustParamName='_sw-precaching'; const version='v1'; const dbName='sw-precaching'; const dbVersion='1'; const dbStorename='asset-revisions';let tmpRevisionedCacheName=`sw-precaching-revisioned-${version}`;self&&self.registration&&(tmpRevisionedCacheName+=`-${self.registration.scope}`);const defaultRevisionedCacheName=tmpRevisionedCacheName;class RevisionDetailsModel{constructor(){this._idbHelper=new IDBHelper(dbName,dbVersion,dbStorename);}get(e){return this._idbHelper.get(e)}put(e,t){return this._idbHelper.put(e,t)}_close(){this._idbHelper.close();}}class BaseCacheEntry{constructor({entryID:e,revision:t,request:r,cacheBust:a}){this.entryID=e,this.revision=t,this.request=r,this.cacheBust=a;}getNetworkRequest(){if(!0!==this.cacheBust)return this.request;let e=this.request.url;const t={};if(!0===this.cacheBust)if('cache'in Request.prototype)t.cache='reload';else{const r=new URL(e,location);r.search+=(r.search?'&':'')+encodeURIComponent(cacheBustParamName)+'='+encodeURIComponent(this.revision),e=r.toString();}return new Request(e,t)}}class StringCacheEntry extends BaseCacheEntry{constructor(e){if(assert.isType({url:e},'string'),0===e.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(e)));super({entryID:e,revision:e,request:new Request(e),cacheBust:!1});}}class DefaultsCacheEntry extends BaseCacheEntry{constructor({entryID:e,revision:t,url:r,cacheBust:a}){if('undefined'==typeof a&&(a=!0),'undefined'==typeof e&&(e=new URL(r,location).toString()),assert.isType({revision:t},'string'),0===t.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad revision Parameter. It should be a string with at least one character: '+JSON.stringify(t)));if(assert.isType({url:r},'string'),0===r.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(r)));if(assert.isType({entryID:e},'string'),0===e.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad entryID Parameter. It should be a string with at least one character: '+JSON.stringify(e)));assert.isType({cacheBust:a},'boolean'),super({entryID:e,revision:t,request:new Request(r),cacheBust:a});}}class RevisionedCacheManager extends BaseCacheManager{constructor({cacheName:e}={}){e=e||defaultRevisionedCacheName,super(e),this._revisionDetailsModel=new RevisionDetailsModel;}addToCacheList({revisionedFiles:e}={}){assert.isInstance({revisionedFiles:e},Array),super._addEntries(e);}_parseEntry(e){if('undefined'==typeof e||null===e)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(e)));let t;switch(typeof e){case'string':t=new StringCacheEntry(e);break;case'object':t=new DefaultsCacheEntry(e);break;default:throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(t)));}return t}_onDuplicateInstallEntryFound(e,t){if(t.revision!==e.revision)throw ErrorFactory$4.createError('duplicate-entry-diff-revisions',new Error(`${JSON.stringify(t)} <=> `+`${JSON.stringify(e)}`))}_isAlreadyCached(e){var t=this;return asyncToGenerator(function*(){const r=yield t._revisionDetailsModel.get(e.entryID);if(r!==e.revision)return!1;const a=yield t._getCache(),n=yield a.match(e.request);return!!n})()}_onEntryCached(e){var t=this;return asyncToGenerator(function*(){yield t._revisionDetailsModel.put(e.entryID,e.revision);})()}_close(){this._revisionDetailsModel._close();}cleanup(){return super.cleanup().then(()=>{return this._close()})}}class RequestCacheEntry extends BaseCacheEntry{constructor(e){if(!(e instanceof Request))throw ErrorFactory$4.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(e)));super({entryID:e.url,request:e,cacheBust:!1});}}class UnrevisionedCacheManager extends BaseCacheManager{constructor({cacheName:e}={}){super(e);}addToCacheList({unrevisionedFiles:e}={}){assert.isInstance({unrevisionedFiles:e},Array),super._addEntries(e);}_parseEntry(e){if('undefined'==typeof e||null===e)throw ErrorFactory$4.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(e)));if('string'==typeof e)return new StringCacheEntry(e);if(e instanceof Request)return new RequestCacheEntry(e);throw ErrorFactory$4.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(e)))}_onDuplicateInstallEntryFound(e,t){}_isAlreadyCached(e){return asyncToGenerator(function*(){return!1})()}_onEntryCached(e){}}if(!assert.isSWEnv())throw ErrorFactory$4.createError('not-in-sw');const idbName=`sw-cache-expiration-${self.registration.scope}`; const idbVersion=1; const urlPropertyName='url'; const timestampPropertyName='timestamp'; const errors$4={'max-entries-or-age-required':`Either the maxEntries or maxAgeSeconds
    parameters (or both) are required when constructing Plugin.`,'max-entries-must-be-number':`The maxEntries parameter to the Plugin
    constructor must either be a number or undefined.`,'max-age-seconds-must-be-number':`The maxAgeSeconds parameter to the Plugin
    constructor must either be a number or undefined.`};var ErrorFactory$6=new ErrorFactory$1(errors$4);class Plugin{constructor({maxEntries:e,maxAgeSeconds:t}={}){if(!(e||t))throw ErrorFactory$6.createError('max-entries-or-age-required');if(e&&'number'!=typeof e)throw ErrorFactory$6.createError('max-entries-must-be-number');if(t&&'number'!=typeof t)throw ErrorFactory$6.createError('max-age-seconds-must-be-number');this.maxEntries=e,this.maxAgeSeconds=t,this._dbs=new Map,this._caches=new Map;}getDB({cacheName:e}={}){var t=this;return asyncToGenerator(function*(){assert.isType({cacheName:e},'string');const r=`${idbName}-${e}`;if(!t._dbs.has(r)){const a=yield idb.open(r,idbVersion,function(n){const s=n.createObjectStore(e,{keyPath:urlPropertyName});s.createIndex(timestampPropertyName,timestampPropertyName,{unique:!1});});t._dbs.set(r,a);}return t._dbs.get(r)})()}getCache({cacheName:e}={}){var t=this;return asyncToGenerator(function*(){if(assert.isType({cacheName:e},'string'),!t._caches.has(e)){const r=yield caches.open(e);t._caches.set(e,r);}return t._caches.get(e)})()}cacheWillMatch({cachedResponse:e,now:t}={}){return this.isResponseFresh({cachedResponse:e,now:t})?e:null}isResponseFresh({cachedResponse:e,now:t}={}){if(e&&this.maxAgeSeconds){assert.isInstance({cachedResponse:e},Response);const r=e.headers.get('date');if(r){'undefined'==typeof t&&(t=Date.now());const a=new Date(r);if(a.getTime()+1000*this.maxAgeSeconds<t)return!1}}return!0}cacheDidUpdate({cacheName:e,newResponse:t,now:r}={}){assert.isType({cacheName:e},'string'),assert.isInstance({newResponse:t},Response),'undefined'==typeof r&&(r=Date.now()),this.updateTimestamp({cacheName:e,now:r,url:t.url}).then(()=>{this.expireEntries({cacheName:e,now:r});});}updateTimestamp({cacheName:e,url:t,now:r}={}){var a=this;return asyncToGenerator(function*(){assert.isType({url:t},'string'),assert.isType({cacheName:e},'string'),'undefined'==typeof r&&(r=Date.now());const n=yield a.getDB({cacheName:e}),s=n.transaction(e,'readwrite');s.objectStore(e).put({[timestampPropertyName]:r,[urlPropertyName]:t}),yield s.complete;})()}expireEntries({cacheName:e,now:t}={}){var r=this;return asyncToGenerator(function*(){assert.isType({cacheName:e},'string'),'undefined'==typeof t&&(t=Date.now());const a=r.maxAgeSeconds?yield r.findOldEntries({cacheName:e,now:t}):[],n=r.maxEntries?yield r.findExtraEntries({cacheName:e}):[],s=[...new Set(a.concat(n))];return yield r.deleteFromCacheAndIDB({cacheName:e,urls:s}),s})()}findOldEntries({cacheName:e,now:t}={}){var r=this;return asyncToGenerator(function*(){assert.isType({cacheName:e},'string'),assert.isType({now:t},'number');const a=t-1000*r.maxAgeSeconds,n=[],s=yield r.getDB({cacheName:e}),o=s.transaction(e,'readonly'),d=o.objectStore(e),l=d.index(timestampPropertyName);return l.iterateCursor(function(u){u&&(u.value[timestampPropertyName]<a&&n.push(u.value[urlPropertyName]),u.continue());}),yield o.complete,n})()}findExtraEntries({cacheName:e}={}){var t=this;return asyncToGenerator(function*(){assert.isType({cacheName:e},'string');const r=[],a=yield t.getDB({cacheName:e});let n=a.transaction(e,'readonly'),s=n.objectStore(e),o=s.index(timestampPropertyName);const d=yield o.count();return d>t.maxEntries&&(n=a.transaction(e,'readonly'),s=n.objectStore(e),o=s.index(timestampPropertyName),o.iterateCursor(function(l){l&&(r.push(l.value[urlPropertyName]),d-r.length>t.maxEntries&&l.continue());})),yield n.complete,r})()}deleteFromCacheAndIDB({cacheName:e,urls:t}={}){var r=this;return asyncToGenerator(function*(){if(assert.isType({cacheName:e},'string'),assert.isInstance({urls:t},Array),0<t.length){const a=yield r.getCache({cacheName:e}),n=yield r.getDB({cacheName:e});yield t.forEach((()=>{var s=asyncToGenerator(function*(o){yield a.delete(o);const d=n.transaction(e,'readwrite'),l=d.objectStore(e);yield l.delete(o),yield d.complete;});return function(o){return s.apply(this,arguments)}})());}})()}}const errors$5={'channel-name-required':`The channelName parameter is required when
    constructing a new Plugin`,'responses-are-same-parameters-required':`The first, second, and
    headersToCheck parameters must be valid when calling responsesAreSame()`};var ErrorFactory$7=new ErrorFactory$1(errors$5);const cacheUpdatedMessageType='CACHE_UPDATED'; const defaultHeadersToCheck=['content-length','etag','last-modified']; const defaultSource='sw-broadcast-cache-update';function broadcastUpdate({channel:e,cacheName:t,url:r,source:a}){assert.isInstance({channel:e},BroadcastChannel),assert.isType({cacheName:t},'string'),assert.isType({source:a},'string'),assert.isType({url:r},'string'),e.postMessage({type:cacheUpdatedMessageType,meta:a,payload:{cacheName:t,updatedUrl:r}});}function responsesAreSame({first:e,second:t,headersToCheck:r}={}){if(!(e instanceof Response&&t instanceof Response&&r instanceof Array))throw ErrorFactory$7.createError('responses-are-same-parameters-required');return r.every(a=>{return e.headers.has(a)===t.headers.has(a)&&e.headers.get(a)===t.headers.get(a)})}class Plugin$1{constructor({channelName:e,headersToCheck:t,source:r}={}){if('string'!=typeof e||0===e.length)throw ErrorFactory$7.createError('channel-name-required');this.channelName=e,this.headersToCheck=t||defaultHeadersToCheck,this.source=r||defaultSource;}get channel(){return this._channel||(this._channel=new BroadcastChannel(this.channelName)),this._channel}cacheDidUpdate({cacheName:e,oldResponse:t,newResponse:r}){assert.isType({cacheName:e},'string'),assert.isInstance({newResponse:r},Response),t&&this.notifyIfUpdated({cacheName:e,first:t,second:r});}notifyIfUpdated({first:e,second:t,cacheName:r}){assert.isType({cacheName:r},'string'),responsesAreSame({first:e,second:t,headersToCheck:this.headersToCheck})||broadcastUpdate({cacheName:r,url:t.url,channel:this.channel,source:this.source});}}class SWLib{constructor(){this._router=new Router$$1,this._revisionedCacheManager=new RevisionedCacheManager,this._unrevisionedCacheManager=new UnrevisionedCacheManager,this._registerInstallActivateEvents(),this._registerDefaultRoutes();}cacheRevisionedAssets(e){if(!Array.isArray(e))throw ErrorFactory.createError('bad-revisioned-cache-list');this._revisionedCacheManager.addToCacheList({revisionedFiles:e});}warmRuntimeCache(e){if(!Array.isArray(e))throw ErrorFactory.createError('bad-revisioned-cache-list');this._unrevisionedCacheManager.addToCacheList({unrevisionedFiles:e});}get router(){return this._router}get Route(){return Route}cacheFirst(e){return this._getCachingMechanism(CacheFirst,e)}cacheOnly(e){return this._getCachingMechanism(CacheOnly,e)}networkFirst(e){return this._getCachingMechanism(NetworkFirst,e)}networkOnly(e){return this._getCachingMechanism(NetworkOnly,e)}staleWhileRevalidate(e){return this._getCachingMechanism(StaleWhileRevalidate,e)}_getCachingMechanism(e,t={}){const r={cacheExpiration:Plugin,broadcastCacheUpdate:Plugin$1},a={plugins:[]};t.cacheName&&(a.cacheName=t.cacheName);const n=Object.keys(r);return n.forEach(s=>{if(t[s]){const o=r[s],d=t[s];a.plugins.push(new o(d));}}),t.plugins&&t.plugins.forEach(s=>{a.plugins.push(s);}),new e({requestWrapper:new RequestWrapper(a)})}_registerInstallActivateEvents(){self.addEventListener('install',e=>{e.waitUntil(Promise.all([this._revisionedCacheManager.install(),this._unrevisionedCacheManager.install()]));}),self.addEventListener('activate',e=>{e.waitUntil(Promise.all([this._revisionedCacheManager.cleanup(),this._unrevisionedCacheManager.cleanup()]));});}_registerDefaultRoutes(){const e=this.cacheFirst({cacheName:this._revisionedCacheManager.getCacheName()}),t=new this.Route({match:({url:r,event:a})=>{const n=this._revisionedCacheManager.getCachedUrls();return-1!==n.indexOf(r.href)},handler:e});this.router.registerRoute(t);}}if(!assert.isSWEnv())throw ErrorFactory.createError('not-in-sw');const swLibInstance=new SWLib;

swLibInstance.cacheRevisionedAssets(manifest);

}());
